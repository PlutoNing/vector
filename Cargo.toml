[package]
name = "scx_agent"
version = "1.1.0"
edition = "2021"

[[bin]]
name = "scx_agent"
[[bin]]
name = "sqlite-test-tool"
path = "src/bin/sqlite-test-tool.rs"

[lints.rust]
unexpected_cfgs = { level = "warn", check-cfg = ['cfg(tokio_unstable)'] }

[workspace]
members = [".", "lib/agent-common", "lib/agent-config", "lib/agent-config-common", "lib/agent-config-macros", "lib/agent-core", "lib/agent-lib"]

[workspace.dependencies]
anyhow = "1.0.98"
cfg-if = { version = "1.0.1", default-features = false }
chrono = { version = "0.4.41", default-features = false, features = ["clock", "serde"] }
chrono-tz = { version = "0.10.3", default-features = false, features = ["serde"] }
clap = { version = "4.5.40", default-features = false, features = ["derive", "error-context", "env", "help", "std", "string", "usage", "wrap_help"] }
darling = { version = "0.20.11", default-features = false, features = ["suggestions"] }
flate2 = { version = "1.1.2", default-features = false, features = ["zlib-rs"] }
futures = { version = "0.3.31", default-features = false, features = ["compat", "io-compat", "std"], package = "futures" }
glob = { version = "0.3.2", default-features = false }
indexmap = { version = "2.10.0", default-features = false, features = ["serde", "std"] }
inventory = { version = "0.3" }
indoc = { version = "2.0.6" }
metrics = "0.24.2"
metrics-tracing-context = { version = "0.17.0", default-features = false }
metrics-util = { version = "0.18.0", default-features = false, features = ["registry"] }
nom = { version = "8.0.0", default-features = false }
paste = { version = "1.0.15" }
pin-project = { version = "1.1.10", default-features = false }
proptest = { version = "1.7" }
proptest-derive = { version = "0.5.1" }
prost = { version = "0.12", default-features = false, features = ["std"] }
prost-build = { version = "0.12", default-features = false }
prost-types = { version = "0.12", default-features = false }
rand = { version = "0.9.1", default-features = false, features = ["small_rng", "thread_rng"] }
serde_json = { version = "1.0.140", default-features = false, features = ["raw_value", "std"] }
serde = { version = "1.0.219", default-features = false, features = ["alloc", "derive", "rc"] }
snafu = { version = "0.8.6", default-features = false, features = ["futures", "std"] }
tempfile = "3.20.0"
tokio = { version = "1.45.1", default-features = false, features = ["full"] }
toml = { version = "0.8.23", default-features = false, features = ["display", "parse"] }
tonic = { version = "0.11", default-features = false, features = ["transport", "codegen", "prost", "tls", "tls-roots", "gzip"] }
uuid = { version = "1.17.0", features = ["v4", "v7", "serde"] }
agent-lib = { path = "lib/agent-lib", default-features = false, features = ["vrl"] }
agent-config = { path = "lib/agent-config" }
agent-config-common = { path = "lib/agent-config-common" }
agent-config-macros = { path = "lib/agent-config-macros" }
vrl = { git = "https://github.com/vectordotdev/vrl.git", branch = "main", features = ["arbitrary", "cli", "test", "test_framework"] }

[dependencies]
cfg-if.workspace = true
clap.workspace = true
indoc.workspace = true
paste.workspace = true
pin-project.workspace = true
proptest = { workspace = true, optional = true }
proptest-derive = { workspace = true, optional = true }
snafu.workspace = true
uuid.workspace = true
vrl.workspace = true
agent-common = { path = "lib/agent-common", default-features = false }
agent-lib.workspace = true
agent-config.workspace = true
agent-config-common.workspace = true
agent-config-macros.workspace = true
async-stream = { version = "0.3.6", default-features = false }
async-trait = { version = "0.1.88", default-features = false }
futures.workspace = true
tokio = { version = "1.45.1", default-features = false, features = ["full"] }
tokio-stream = { version = "0.1.17", default-features = false, features = ["net", "sync", "time"] }
tokio-util = { version = "0.7", default-features = false, features = ["io", "time"] }
async-recursion = "1.1.1"
crossbeam-queue = { version = "0.3.12", default-features = false, features = ["std"] }
tracing = { version = "0.1.34", default-features = false }
metrics.workspace = true
tower = { version = "0.5.2", default-features = false, features = ["buffer", "limit", "retry", "timeout", "util", "balance", "discover"] }
serde.workspace = true
serde-toml-merge = { version = "0.3.9", default-features = false }
serde_json.workspace = true
serde_with = { version = "3.14.0", default-features = false, features = ["macros", "std"] }
serde_yaml = { version = "0.9.34", default-features = false }
prost = { workspace = true, optional = true }
hex = { version = "0.4.3", default-features = false, optional = true }
arc-swap = { version = "1.7", default-features = false }
async-compression = { version = "0.4.25", default-features = false, features = ["tokio", "gzip"], optional = true }
bytes = { version = "1.10.1", default-features = false, features = ["serde"] }
bytesize = { version = "2.0.1", default-features = false }
chrono.workspace = true
chrono-tz.workspace = true
csv = { version = "1.3", default-features = false }
derivative = { version = "2.2.0", default-features = false }
dyn-clone = { version = "1.0.19", default-features = false }
encoding_rs = { version = "0.8.35", default-features = false, features = ["serde"] }
enum_dispatch = { version = "0.3.13", default-features = false }
exitcode = { version = "1.1.2", default-features = false }
flate2.workspace = true
futures-util = { version = "0.3.29", default-features = false }
glob.workspace = true
hash_hasher = { version = "2.0.4", default-features = false }
headers = { version = "0.3.9", default-features = false }
hostname = { version = "0.4.0", default-features = false }
http = { version = "0.2.9", default-features = false }
http-1 = { package = "http", version = "1.0", default-features = false, features = ["std"] }
http-serde = "1.1.3"
http-body = { version = "0.4.5", default-features = false }
hyper = { version = "0.14.28", default-features = false, features = ["client", "runtime", "http1", "http2", "server", "stream"] }
hyper-openssl = { version = "0.9.2", default-features = false }
hyper-proxy = { version = "0.9.1", default-features = false, features = ["openssl-tls"] }
indexmap.workspace = true
inventory = { version = "0.3.20", default-features = false }
lru = { version = "0.15.0", default-features = false, optional = true }
md-5 = { version = "0.10", default-features = false, optional = true }
ordered-float = { version = "4.6.0", default-features = false }
rand.workspace = true
regex = { version = "1.11.1", default-features = false, features = ["std", "perf"] }
seahash = { version = "4.1.0", default-features = false }
smallvec = { version = "1", default-features = false, features = ["union", "serde"] }
snap = { version = "1.1.1", default-features = false }
sqlx = { version = "0.8.6", default-features = false, features = ["derive", "postgres", "chrono", "runtime-tokio"], optional = true }
stream-cancel = { version = "0.8.2", default-features = false }
tikv-jemallocator = { version = "0.6.0", default-features = false, features = ["unprefixed_malloc_on_supported_platforms"], optional = true }
toml.workspace = true
tonic = { workspace = true, optional = true }
thread_local = { version = "1.1.9", default-features = false, optional = true }
typetag = { version = "0.2.20", default-features = false }
url = { version = "2.5.4", default-features = false, features = ["serde"] }
warp = { version = "0.3.7", default-features = false }
heim = { git = "https://github.com/vectordotdev/heim.git", branch = "update-nix", default-features = false, features = ["disk"] }
sysinfo = "0.34.2"
byteorder = "1.5.0"
tracing-subscriber = { version = "0.3.19", features = ["env-filter"] }
rusqlite = "0.32.1"
tempfile.workspace = true

[target.'cfg(unix)'.dependencies]
nix = { version = "0.26.2", default-features = false, features = ["socket", "signal"] }

[target.'cfg(target_os = "linux")'.dependencies]
netlink-packet-utils = "0.5.2"
netlink-packet-sock-diag = "0.4.2"
netlink-packet-core = "0.7.0"
netlink-sys = { version = "0.8.7", features = ["tokio_socket"] }

[build-dependencies]
prost-build = { workspace = true, optional = true }

[dev-dependencies]
base64 = "0.22.1"
libc = "0.2.174"
proptest.workspace = true
tempfile.workspace = true
tokio = { version = "1.45.1", features = ["test-util"] }
tokio-test = "0.4.4"
agent-lib = { workspace = true, features = ["test"] }
vrl.workspace = true

[features]
default = ["sinks", "sources", "unix"]
all-logs = ["sinks-logs"]
all-metrics = ["sinks-metrics", "sources-metrics"]
unix = ["tikv-jemallocator"]
# docker = ["dep:bollard", "dep:dirs-next"]
sources = ["sources-metrics"]
sources-metrics = ["dep:prost", "sources-host_metrics"]
sources-host_metrics = ["heim/cpu", "heim/host", "heim/memory", "heim/net"]
sinks = ["sinks-logs", "sinks-metrics"]
sinks-logs = ["sinks-console", "sinks-file"]
sinks-metrics = ["sinks-console"]
sinks-console = []
sinks-file = ["dep:async-compression"]
nightly = []
proptest = ["dep:proptest", "dep:proptest-derive", "vrl/proptest"]
